[{"C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\index.tsx":"1","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\App.tsx":"3","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Services\\Service.tsx":"4","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\debug.js":"5","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\redux\\actions.tsx":"6","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\redux\\store.tsx":"7","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\redux\\reducers\\items.tsx":"8","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\ItemsDisplay.tsx":"9","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\ItemInput.tsx":"10","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\TextInput.tsx":"11","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\SummariesDisplay.tsx":"12","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\Switch.tsx":"13","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\AmazonOrdersDisplay.tsx":"14"},{"size":500,"mtime":1606713903101,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1606713903101,"results":"17","hashOfConfig":"16"},{"size":4809,"mtime":1612412765911,"results":"18","hashOfConfig":"16"},{"size":2239,"mtime":1612412596955,"results":"19","hashOfConfig":"16"},{"size":243,"mtime":1612308000199,"results":"20","hashOfConfig":"16"},{"size":373,"mtime":1612389450437,"results":"21","hashOfConfig":"16"},{"size":220,"mtime":1611466873180,"results":"22","hashOfConfig":"16"},{"size":627,"mtime":1612389409713,"results":"23","hashOfConfig":"16"},{"size":2477,"mtime":1612400868655,"results":"24","hashOfConfig":"16"},{"size":3803,"mtime":1612390161283,"results":"25","hashOfConfig":"16"},{"size":4016,"mtime":1612391964202,"results":"26","hashOfConfig":"16"},{"size":1784,"mtime":1612304848686,"results":"27","hashOfConfig":"16"},{"size":608,"mtime":1612389117492,"results":"28","hashOfConfig":"16"},{"size":2008,"mtime":1612401201157,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5a2tqi",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"32"},"C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\index.tsx",[],["69","70"],"C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\App.tsx",["71","72","73","74","75","76","77","78","79","80","81","82"],"C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Services\\Service.tsx",["83"],"import debugVars from '../debug'\r\nvar ID = function () {\r\n  return '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\nexport class Item {\r\n  cost;\r\n  date;\r\n  title;\r\n  notes;\r\n  category;\r\n  p1Cost;\r\n  p2Cost;\r\n  amazonOrderID;\r\n  constructor(cost: number, date: Date, title: string, notes:string, category: string, p1Cost: number, p2Cost: number, amazonOrderID: string = \"\"){\r\n    this.cost = cost;\r\n    this.date = date;\r\n    this.title = title;\r\n    this.notes = notes;\r\n    this.category = category;\r\n    this.p1Cost = p1Cost;\r\n    this.p2Cost = p2Cost;\r\n    this.amazonOrderID = amazonOrderID;\r\n  }\r\n}\r\nexport class Category {\r\n  cost;\r\n  p1Cost;\r\n  p2Cost;\r\n  constructor(cost: number,p1Cost: number, p2Cost: number){\r\n    this.cost = cost;\r\n    this.p1Cost = p1Cost;\r\n    this.p2Cost = p2Cost;\r\n  }\r\n}\r\n\r\nexport const requestItems = () => {\r\n  return new Promise((res:any, rej:any) => {\r\n    fetch(debugVars.itemsEndpoint).then(res=>{\r\n      return res.json()\r\n     } \r\n     ).then(data => { \r\n       let newItems:any = {}\r\n       let newSummaries:any = {}\r\n       let newAmazonOrders:any = {}\r\n       Object.keys(data).forEach(key => {\r\n  \r\n        let item = data[key]\r\n        newItems = { ...newItems, [key]: new Item(item.cost, new Date(item.date), item.title,item.notes, item.category, item.p1Cost, item.p2Cost, item.amazonOrderID)}\r\n        if (newSummaries[item.category]){ \r\n          newSummaries[item.category].cost = parseFloat(newSummaries[item.category].cost)+    parseFloat(item.cost)\r\n          newSummaries[item.category].p1Cost =parseFloat(newSummaries[item.category].p1Cost)+ parseFloat(item.p1Cost)\r\n          newSummaries[item.category].p2Cost = parseFloat(newSummaries[item.category].p2Cost) + parseFloat(item.p2Cost) \r\n        }else{ \r\n          newSummaries[item.category] = new Category(parseFloat(item.cost), item.p1Cost, item.p2Cost)\r\n        }\r\n        if (item.amazonOrderID){\r\n          \r\n          if (!newAmazonOrders[item.amazonOrderID]){ \r\n            newAmazonOrders[item.amazonOrderID] = []\r\n          }\r\n          newAmazonOrders[item.amazonOrderID].push(key)\r\n        }\r\n       })\r\n       \r\n       res({items:newItems, summaries:newSummaries, amazonOrders: newAmazonOrders})\r\n     })\r\n  })\r\n}","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\debug.js",[],["84","85"],"C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\redux\\actions.tsx",["86","87"],"import {Dispatch} from 'redux'; \r\nimport {Category} from '../Services/Service'\r\n \r\nexport const updateItems = (items : any, summaries: any, amazonOrders : any = {}) =>  {\r\n \r\n  let payload = {\r\n    items:items ,\r\n    summaries:summaries,\r\n    amazonOrders:amazonOrders\r\n  }\r\n  console.log(payload)\r\n  return {\r\n    type: 'UPDATE_ITEMS',\r\n    payload: payload ,\r\n  } \r\n};\r\n ","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\redux\\store.tsx",[],"C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\redux\\reducers\\items.tsx",["88"],"const initialState: any = {\r\n  items: {},\r\n  summaries: {},\r\n  amazonOrders:{}\r\n}\r\nexport default function( state = initialState, action: any){\r\n console.log(action.payload)\r\n  switch(action.type){\r\n    case 'UPDATE_ITEMS':{\r\n      return {\r\n        ...state,\r\n        items: {\r\n          ...state.items,\r\n          ...action.payload.items,\r\n        },\r\n        summaries: {\r\n          ...state.summaries,\r\n          ...action.payload.summaries\r\n        },\r\n        amazonOrders: {\r\n          ...state.amazonOrders,\r\n          ...action.payload.amazonOrders\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\ItemsDisplay.tsx",["89","90"],"import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField'; \r\nconst Display = ({ items }:any) => { \r\n  \r\n  return ( \r\n      <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>id</TableCell>\r\n            <TableCell align=\"right\">title</TableCell>\r\n            <TableCell align=\"right\">cost</TableCell>\r\n            <TableCell align=\"right\">date</TableCell>\r\n            <TableCell align=\"right\">Categories</TableCell>\r\n            <TableCell align=\"right\">P1 Cost</TableCell>\r\n            <TableCell align=\"right\">P2 Cost</TableCell>\r\n            <TableCell align=\"right\">notes</TableCell>\r\n            <TableCell align=\"right\">amazon order #</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { Object.keys( items).map((i) =>{\r\n          let item = items[i]\r\n          const d = item.date\r\n          const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n          const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n          const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n          return (\r\n            <TableRow key={i}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {i}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{ item.title}</TableCell>\r\n              <TableCell align=\"right\">{ item.cost}</TableCell>\r\n              <TableCell align=\"right\">{`${mo}-${da}-${ye}`}</TableCell>\r\n              <TableCell align=\"right\">{item.category}</TableCell>\r\n              <TableCell align=\"right\">{item.p1Cost}</TableCell>\r\n              <TableCell align=\"right\">{item.p2Cost}</TableCell>\r\n              <TableCell align=\"right\">{item.notes}</TableCell>\r\n              <TableCell align=\"right\">{item.amazonOrderID ? item.amazonOrderID: ''}</TableCell>\r\n            </TableRow>\r\n          )})}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n   \r\n  );\r\n}\r\n\r\n \r\nexport default Display\r\n","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\ItemInput.tsx",["91"],"import 'date-fns';\r\nimport React, {useState} from 'react';\r\nimport TextInput from './TextInput'\r\nimport Switch from './Switch'\r\nimport Card from '@material-ui/core/Card';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n    },\r\n  }),\r\n);\r\n\r\nconst mapStateToProps = (state :any)=> ({\r\n  ...state\r\n});\r\n \r\nconst ItemInput = ({items, amazonOrders, onSubmit }:any ) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(\"\")\r\n  const [cost, setCost] = useState(\"\")\r\n  const [date, setDate] = useState(new Date())\r\n  const [category, setCategory] =useState(\"\")\r\n  const [splitRule, setSplitRule] = useState(\"\")\r\n  const [notes, setNotes] = useState(\"\")\r\n  const [isAmazonOrder, setIsAmazonOrder] = useState(false)\r\n  const [amazonOrderID, setAmazonOrderID] = useState(\"\")\r\n  console.log([title, cost, date, category, splitRule, notes])\r\n  let titleList:any = []\r\n  Object.keys(items).forEach(key => {\r\n    let item = items[key]\r\n    if ( !titleList.includes(item.title)){\r\n      titleList.push(item.title)\r\n    }\r\n  }) \r\n  console.log(amazonOrders)\r\n  return (\r\n    <Card style={{padding:30}}>\r\n      <div style={{flexDirection:'column', display:'flex'}}>\r\n        <div style={{flexDirection:'row', display:'flex'}}>\r\n        <TextInput\r\n          type=\"text-select\"\r\n          value={title}\r\n          onChange={setTitle}\r\n          label={\"title\"}\r\n          values={titleList}\r\n        />\r\n        <TextInput\r\n          value={cost}\r\n          onChange={setCost}\r\n          label={\"cost\"}\r\n        />\r\n        <TextInput\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={setDate}\r\n          label={\"date\"}\r\n        />\r\n        </div>\r\n        <div style={{flexDirection:'row', display:'flex'}}>\r\n        <TextInput\r\n          type=\"select\"\r\n          values={[\r\n             \"Groceries\",\r\n             \"Recreation\",\r\n             \"Miscellaneous\"\r\n          ]}\r\n          value={category}\r\n          onChange={setCategory}\r\n          label={\"category\"}\r\n        />\r\n        <TextInput\r\n          type=\"select\"\r\n          values={[\r\n             \"1:0\",\r\n             \"1:1\",\r\n             \"0:1\"\r\n          ]}\r\n          value={splitRule}\r\n          onChange={setSplitRule}\r\n          label={\"split rule\"}\r\n        />\r\n        <TextInput\r\n          value={notes}\r\n          onChange={setNotes}\r\n          label={\"notes\"}\r\n        />\r\n        </div>\r\n        <div style={{flexDirection:'row', display:'flex'}}>\r\n        <Switch\r\n          value={isAmazonOrder}\r\n          onChange={setIsAmazonOrder}\r\n        />\r\n        {isAmazonOrder && \r\n          <TextInput\r\n            type=\"text-select\"\r\n            value={amazonOrderID}\r\n            onChange={setAmazonOrderID}\r\n            label={\"Amazon Order #\"}\r\n            values={Object.keys(amazonOrders)}\r\n          />\r\n        }\r\n        </div>\r\n        <div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={()=>{\r\n            onSubmit && onSubmit({\r\n              title, cost, date, category, splitRule, notes, amazonOrderID\r\n            }).then(() => {\r\n              setTitle(\"\")\r\n              setCost(\"\")\r\n              //setDate(new Date()) // keep previous date\r\n              setCategory(\"\")\r\n              setSplitRule(\"\")\r\n              setNotes(\"\")\r\n              setAmazonOrderID(\"\")\r\n            })\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n        </div>\r\n      \r\n      </div>\r\n     \r\n      \r\n    </Card>\r\n\r\n  )\r\n}\r\nexport default connect<any,any,any>(mapStateToProps, )(ItemInput)","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\TextInput.tsx",["92","93","94","95","96","97","98","99"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MuiSelect from '@material-ui/core/Select';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiAutoComplete  from '@material-ui/lab/Autocomplete';\r\n\r\nconst getText = (evt:any) => evt.target.value\r\nconst Input = (props:any) => {\r\n  if (props.type == \"date\") {\r\n    return <DatePicker {...props}/>\r\n  }else if (props.type == \"select\") {\r\n    return <Select {...props}/>\r\n  }else if (props.type == \"text-select\") {\r\n    return <AutoComplete {...props}/>\r\n  }\r\n  return  <TextInput {...props}/>\r\n}\r\n\r\nconst TextInput = ({label, onChange, value}:any) => {\r\n  return (\r\n    <TextField\r\n      id=\"standard-basic\"\r\n      label={label}\r\n      variant=\"outlined\"\r\n      value={value}\r\n      onChange={(evt:any)=>onChange && onChange(getText(evt))}\r\n      autoComplete=\"off\" \r\n    />\r\n\r\n  )\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n    },\r\n  }),\r\n);\r\n\r\nconst  AutoComplete = ({label, onChange, value, values}:any) => {\r\n  const classes = useStyles(); \r\n  const [textBoxValue, setTextBoxValue] = React.useState(values[0] || null)\r\n  const [textInputValue, setTextInputValue] = React.useState(value)\r\n  React.useEffect(() => {\r\n    setTextBoxValue(values[0] || null)\r\n    setTextInputValue(value)\r\n  }, [value])\r\n  return (\r\n    \r\n    <MuiAutoComplete  \r\n     freeSolo\r\n\r\n      value={textBoxValue}\r\n      onChange={(evt:any, newValue:string)=>{\r\n        setTextBoxValue(newValue)\r\n        onChange && onChange(newValue)\r\n      }}\r\n      inputValue={textInputValue}\r\n      onInputChange={(event:any, newInputValue:any) => {\r\n        setTextInputValue(newInputValue)\r\n       onChange && onChange(newInputValue)\r\n      }}\r\n      id={label}\r\n      options={values}\r\n      style={{ width: 300 }}\r\n      renderInput={(params:any) =>{ \r\n        const inputProps = params.inputProps;\r\n        //disable google suggestions\r\n        inputProps.autoComplete = \"off\"\r\n        return <TextField autoComplete=\"off\" {...params} inputProps={inputProps} label={label} variant=\"outlined\" />\r\n      }}\r\n    />\r\n  )\r\n}\r\nconst  Select = ({label, onChange, value, values}:any) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl variant=\"outlined\"  className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-outlined-label\">{label}</InputLabel>\r\n      <MuiSelect\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        value={value}\r\n        onChange={(evt:any)=>onChange && onChange(getText(evt))}\r\n        label={label}\r\n      >\r\n        {\r\n          values && values.map((value:any) => {\r\n            return (\r\n              <MenuItem value={value ? value : \"\"}>\r\n                {value ? value : \"\"}\r\n              </MenuItem>\r\n            )\r\n          })\r\n        }\r\n      </MuiSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\n\r\nconst DatePicker = ({label, onChange, value}:any) => {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        inputVariant=\"outlined\"\r\n        label={label}\r\n        format=\"MM/dd/yyyy\"\r\n        InputAdornmentProps={{ position: \"start\" }}\r\n        value={value}\r\n        onChange={(date)=>onChange && onChange(date)}\r\n        KeyboardButtonProps={{\r\n          'aria-label': 'change date',\r\n        }} \r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  )\r\n}\r\nexport default Input;","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\SummariesDisplay.tsx",["100","101","102","103","104"],"import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField'; \r\nconst Display = ({ summaries }:any) => { \r\n  \r\n  return ( \r\n    <TableContainer component={Paper}>\r\n    <Table aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell >category</TableCell>\r\n          <TableCell align=\"right\">cost</TableCell>\r\n          <TableCell align=\"right\">P1 Cost</TableCell>\r\n          <TableCell align=\"right\">P2 Cost</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        { Object.keys( summaries).map((i) =>{\r\n          let summ = summaries[i]\r\n        const d = summ.date\r\n        const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\r\n        const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\r\n        const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\r\n          return (\r\n          <TableRow key={summ.title}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {i}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{summ.cost}</TableCell>\r\n            <TableCell align=\"right\">{summ.p1Cost}</TableCell>\r\n            <TableCell align=\"right\">{summ.p2Cost}</TableCell>\r\n          </TableRow>\r\n        )})}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n   \r\n  );\r\n}\r\n\r\n \r\nexport default Display\r\n","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\Switch.tsx",["105","106"],"import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MuiSwitch from '@material-ui/core/Switch'\r\n\r\nexport default function Switch({label, onChange, value}:any ) {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  \r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={<MuiSwitch checked={value} onChange={(evt:any)=> onChange && onChange(evt.target.checked)} name={label} />}\r\n        label={label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}","C:\\Users\\mayas\\Documents\\git\\money-watch\\client\\src\\Components\\AmazonOrdersDisplay.tsx",["107"],"import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst Display = ({ amazonOrders, items }:any) => { \r\n  \r\n  return ( \r\n      <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell  rowSpan={2}>order</TableCell>\r\n            <TableCell  colSpan={2}  align=\"right\">items</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell align=\"right\">ID</TableCell>\r\n            <TableCell align=\"right\">cost</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { Object.keys( amazonOrders).map((i:any ) =>{\r\n          let order = amazonOrders[i]\r\n          let totalOrderCost = 0\r\n          return (\r\n            <>\r\n            {   amazonOrders[i].map((itemKey:any, idx: any) =>{\r\n              let item = items[itemKey]\r\n              totalOrderCost+=parseFloat(item.cost)\r\n              return (\r\n                <TableRow key={order.title}>\r\n                {idx == 0 && (<TableCell component=\"th\" scope=\"row\" rowSpan={amazonOrders[i].length}>{i}</TableCell>)}\r\n                  <TableCell align=\"right\">{ itemKey}</TableCell>\r\n                  <TableCell align=\"right\">{item.cost}</TableCell>\r\n                </TableRow>\r\n              )})}\r\n              <TableRow key={order.title}>\r\n                <TableCell align=\"right\" colSpan={2}>Total Cost:</TableCell>\r\n                <TableCell align=\"right\">{totalOrderCost}</TableCell>\r\n              </TableRow>\r\n            </>\r\n            \r\n          )})}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n   \r\n  );\r\n}\r\n\r\n \r\nexport default Display\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"116","line":4,"column":26,"nodeType":"114","messageId":"115","endLine":4,"endColumn":31},{"ruleId":"112","severity":1,"message":"117","line":7,"column":9,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"118","line":7,"column":19,"nodeType":"114","messageId":"115","endLine":7,"endColumn":23},{"ruleId":"112","severity":1,"message":"119","line":20,"column":8,"nodeType":"114","messageId":"115","endLine":20,"endColumn":18},{"ruleId":"112","severity":1,"message":"120","line":21,"column":7,"nodeType":"114","messageId":"115","endLine":21,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":65,"column":5,"nodeType":"123","endLine":65,"endColumn":14,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":76,"column":33,"nodeType":"127","messageId":"128","endLine":76,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":76,"column":92,"nodeType":"127","messageId":"128","endLine":76,"endColumn":94},{"ruleId":"125","severity":1,"message":"126","line":77,"column":32,"nodeType":"127","messageId":"128","endLine":77,"endColumn":34},{"ruleId":"125","severity":1,"message":"126","line":77,"column":91,"nodeType":"127","messageId":"128","endLine":77,"endColumn":93},{"ruleId":"112","severity":1,"message":"129","line":105,"column":9,"nodeType":"114","messageId":"115","endLine":105,"endColumn":14},{"ruleId":"112","severity":1,"message":"130","line":2,"column":5,"nodeType":"114","messageId":"115","endLine":2,"endColumn":7},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"131","line":1,"column":9,"nodeType":"114","messageId":"115","endLine":1,"endColumn":17},{"ruleId":"112","severity":1,"message":"117","line":2,"column":9,"nodeType":"114","messageId":"115","endLine":2,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":6,"column":1,"nodeType":"134","endLine":29,"endColumn":2},{"ruleId":"112","severity":1,"message":"135","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":14},{"ruleId":"112","severity":1,"message":"136","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":17},{"ruleId":"112","severity":1,"message":"137","line":26,"column":9,"nodeType":"114","messageId":"115","endLine":26,"endColumn":16},{"ruleId":"112","severity":1,"message":"138","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":12},{"ruleId":"112","severity":1,"message":"139","line":11,"column":8,"nodeType":"114","messageId":"115","endLine":11,"endColumn":22},{"ruleId":"112","severity":1,"message":"135","line":15,"column":8,"nodeType":"114","messageId":"115","endLine":15,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":20,"column":18,"nodeType":"127","messageId":"128","endLine":20,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":22,"column":24,"nodeType":"127","messageId":"128","endLine":22,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":24,"column":24,"nodeType":"127","messageId":"128","endLine":24,"endColumn":26},{"ruleId":"112","severity":1,"message":"137","line":54,"column":9,"nodeType":"114","messageId":"115","endLine":54,"endColumn":16},{"ruleId":"121","severity":1,"message":"140","line":60,"column":6,"nodeType":"123","endLine":60,"endColumn":13,"suggestions":"141"},{"ruleId":"112","severity":1,"message":"135","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":14},{"ruleId":"112","severity":1,"message":"136","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":17},{"ruleId":"112","severity":1,"message":"142","line":28,"column":15,"nodeType":"114","messageId":"115","endLine":28,"endColumn":17},{"ruleId":"112","severity":1,"message":"143","line":29,"column":15,"nodeType":"114","messageId":"115","endLine":29,"endColumn":17},{"ruleId":"112","severity":1,"message":"144","line":30,"column":15,"nodeType":"114","messageId":"115","endLine":30,"endColumn":17},{"ruleId":"112","severity":1,"message":"145","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":15},{"ruleId":"112","severity":1,"message":"146","line":7,"column":17,"nodeType":"114","messageId":"115","endLine":7,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":35,"column":22,"nodeType":"127","messageId":"128","endLine":35,"endColumn":24},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'Category' is defined but never used.","'Item' is defined but never used.","'Typography' is defined but never used.","'lightTheme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'updateItems'. Either include it or remove the dependency array. If 'updateItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'theme' is assigned a value but never used.","'ID' is assigned a value but never used.","'Dispatch' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Button' is defined but never used.","'TextField' is defined but never used.","'classes' is assigned a value but never used.","'Card' is defined but never used.","'FormHelperText' is defined but never used.","React Hook React.useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. If 'setTextBoxValue' needs the current value of 'values', you can also switch to useReducer instead of useState and read 'values' in the reducer.",["150"],"'ye' is assigned a value but never used.","'mo' is assigned a value but never used.","'da' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [updateItems, updated]",{"range":"155","text":"156"},"Update the dependencies array to be: [value, values]",{"range":"157","text":"158"},[1928,1937],"[updateItems, updated]",[1876,1883],"[value, values]"]